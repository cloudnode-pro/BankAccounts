# Database configuration
db:
    # Select here the database you want to use.
    # The following databases are supported:
    #   sqlite → (default) stores all data in a local file
    #   mariadb → allows using a remote database with JDBC
    # IMPORTANT!
    # If you change the database type, the data is NOT automatically migrated between databases!
    db: sqlite

    # SQLite
    sqlite:
        # Database file name (in the plugin’s folder).
        # If the file does not exist, it will be created.
        file: bank.db

    # MariaDB
    mariadb:
        # JDBC url
        jdbc: jdbc:mariadb://localhost:3306/your_db_name
        # Database user
        user: root
        # Database password
        password: ChangeThis!

    # Advanced configuration (do not touch unless you know what you are doing)
    # HikariCP options.
    cachePrepStmts: true
    prepStmtCacheSize: 250
    prepStmtCacheSqlLimit: 2048
    useServerPrepStmts: true
    useLocalSessionState: true
    rewriteBatchedStatements: true
    cacheResultSetMetadata: true
    cacheServerConfiguration: true
    elideSetAutoCommits: true
    maintainTimeStats: false

integrations:
    # BankAccounts can work as a Vault economy provider.
    # If enabled, BankAccounts will be the Vault back-end for handling funds.
    # May not work correctly if you have other plugins that *provide* a Vault economy system.
    vault:
        # Whether to enable the Vault integration.
        enabled: false

        # The description shown for all Vault transactions.
        description: Vault Transaction

        # Name of the server Vault account.
        # All Vault transactions will appear as to/from this account.
        server-account: Server Vault

currency:
    # Currency symbol
    symbol: $

    # Currency format
    # See https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/text/DecimalFormat.html#special_pattern_character
    format: "#,##0.00"

# Starting balance.
# The minimum value is ‘0’.
# Set to ‘false’ to disable creating an account on join.
# If the Vault integration is enabled and this is set to ‘false’,
# an account with balance ‘0’ will be created regardless!
starting-balance: 0

# Server account
server-account:
    # If enabled, when the plugin is loaded, an account will be created as
    # a player with UUID ‘00000000-0000-0000-0000-000000000000’.
    # Enabling this is required for features like interest to work.
    enabled: true

    # Display name for the server account.
    name: Central Bank

    # Account type
    # Possible values:
    #   0 → Personal account.
    #   1 → Business account.
    type: 1

    # Starting balance
    # Use ‘Infinity’ for infinite ∞ balance
    starting-balance: Infinity

# Maximum number of accounts a player can have
# Account types:
#   0 → Personal account
#   1 → Business account
# Limits:
#   0 → cannot have any accounts
#  -1 → unlimited accounts
#
# Players can open accounts themselves if they have the ‘bank.account.create’ permission.
# These limits also apply if someone else creates bank accounts for other players with the
# admin permission ‘bank.account.create.other’.
# You can bypass the limits using the ‘bank.account.create.bypass’ permission.
account-limits:
    # Personal accounts
    0: 1
    # Business accounts
    1: -1

# Top balance leaderboard.
# Accounts with infinite balance are excluded.
baltop:
    # The number of accounts to show per page.
    per-page: 10

# Transfer confirmation.
# This is to prevent accidentally transferring large amounts.
transfer-confirmation:
    # If enabled, players will be shown a transfer overview asking them to confirm the transfer.
    enabled: true

    # The minimum transfer amount that requires confirmation.
    # Setting this to ‘0’ will enable confirmation for all transfers.
    min-amount: 200

    # If true, confirmation will NEVER be shown for transfers between own accounts.
    bypass-own-accounts: true

# Transactions history.
history:
    # Number of transactions to return per page.
    # You can use ‘/bank transactions <account> --all’ to view all transactions.
    per-page: 10

# Payment instruments
# These are like bank cards that can be used to make payments.
instruments:
    # The in-game item to use. See https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
    material: PAPER

    # Require the player to have an item in their inventory of the same material to create a new instrument.
    # The item is consumed and replaced with the instrument. This is recommended to prevent limitless generation of
    # items. Payment instruments CAN be used in crafting recipes and villager trading as if they were regular items.
    # You can bypass this requirement using the ‘bank.instrument.create.bypass’ permission.
    # Non-players (e.g. console, command blocks, etc.) always bypass this requirement.
    require-item: true

    # The name of the item.
    # Placeholders:
    #   <account> → Account name.
    #     Defaults to owner username or ID if not set.
    #   <account-id> → Account ID.
    #   <account-type> → Account type (Personal or Business).
    #   <account-owner> → Account owner username.
    #   <date> → Date the card was created.
    #     You can use ‘<date:'yyyy-MM-dd HH:mm:ss'>’.
    #     Check here for patterns:
    #       https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html#patterns
    # NOTE: The placeholders are set only when the item is created.
    # If the account is renamed, the balance changes, etc., the text on the item will NOT be updated.
    # Additionally, if you modify this, it will only be effective for newly created bank cards.
    # (Old ones will still work)
    name: <green><b>Bank Card</b></green> <aqua>—</aqua> <gray><account></gray>

    # Lore of the item (text below the name).
    # Same placeholders as ‘name’.
    lore:
        - <white><account-type>, <account></white>
        - <gray>#<account-id></gray>
        - <gray>Issued <date:'MM/yy'></gray>
        - <gray>Owner:</gray> <white><account-owner></white>

    # Item glint.
    # This makes the item shine as if enchanted.
    glint:
        enabled: true

        # The hidden enchantment that is applied to the item.
        # Enchantment names are the same as seen in the ‘/enchant’ command.
        # Do NOT include the ‘minecraft:’ prefix.
        # If you set this to something like ‘vanishing_curse’, the item will disappear when the player dies.
        # If you use a compatible enchantment with the item material, the enchantment will be fully functional.
        # (e.g. if your item is a sword, and you use ‘sharpness’, the sword will deal more damage, even though the
        # enchantment is not listed in the lore. It is recommended to avoid that.)
        # BankAccounts will always use level 1 of the enchantment.
        enchantment: unbreaking

# Point of Sale.
# This is a chest that can have any items.
# Players can buy all the items in the POS for the specified price.
# Note: you cannot use <hover> <click> etc. in GUIs!
pos:
    # Allow creating POS with a PERSONAL account.
    # If you want to require players to use a business or Vault account, set this to ‘false’.
    # You can bypass this with the ‘bank.pos.create.personal’ permission.
    allow-personal: false

    # The title shown at the top of the preview GUI when opening a POS.
    # Placeholders:
    #   <description> → POS description
    #   <price> → Price of the POS contents without formatting, example: 123456.78
    #   <price-formatted> → Price of the POS contents with formatting, example: $123,456.78
    #   <price-short> → Price of the POS contents with formatting, example: ‘$123k’.
    title: <green><bold>Point of Sale</bold></green> <gray>— <price-formatted></gray>

    # The item inside the POS preview GUI that shows information about the POS.
    info:
        # Available materials: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
        material: PAPER

        # Glint/glow (does not work on some items).
        glint: true

        # The name of the item when the POS owner is previewing the POS.
        # Same placeholders as POS title.
        name-owner: <green><bold>POS</bold></green>

        # The name of the item when a potential POS buyer is previewing the POS.
        # All placeholders from POS title can be used.
        # All placeholders from ‘messages.balance’ can be used (the account is the POS owner’s).
        name-buyer: <green><bold>POS</bold></green> <gray>— <account></gray>

        # Item lore lines when the POS owner is previewing the POS.
        # Same placeholders as POS title.
        lore-owner:
            - <gray>Price:</gray> <green><price-formatted></green>
            - <gray>Description:</gray> <white><description></white>

        # Item lore lines when a potential POS buyer is previewing the POS.
        # Same placeholders as ‘name-buyer’.
        lore-buyer:
            - <gray>Price:</gray> <green><price-formatted></green>
            - <gray>Description:</gray> <white><description></white>

    # POS delete/cancel button (owner only).
    # No placeholders!
    delete:
        material: BARRIER
        glint: false
        name: <red><bold>Cancel POS</bold></red>
        lore:
            - <gray>Click to cancel this POS.</gray>

    # POS purchase confirmation button (buyer only).
    # Same placeholders as ‘name-buyer’, but this time the account is of the buyer.
    confirm:
        material: LIME_STAINED_GLASS_PANE
        glint: false
        name: <green><bold>Confirm Purchase</bold></green>
        lore:
            - <gray>Click to confirm purchase.</gray>
            - <gray>Price:</gray> <green><price-formatted></green>
            - <gray>Balance:</gray> <white><balance-formatted></white>
            - <gray>Paying from:</gray> <white><account></white> <gray>(<account-type>)</gray>
            - <dark_gray>Account ID <account-id></dark_gray>

    # Decline purchasing the POS contents (buyer only).
    # Clicking this simply closes the POS preview GUI.
    decline:
        material: RED_STAINED_GLASS_PANE
        glint: false
        name: <red><bold>Decline Purchase</bold></red>
        lore:
            - <gray>Click to decline this purchase.</gray>

# Interest rates.
# Interest is paid from/to the server account.
# If the server account has insufficient funds, interest payments will silently fail.
# NOTE: A transaction is created for each interest payment!
interest:
    # Interest on personal accounts.
    0:
        # The per cent to add to the balance.
        # If negative, it will be subtracted.
        # Acceptable range: rate ∈ [-100, 100]
        # Set to ‘0’ to DISABLE interest.
        rate: 0

        # Interval time in real-life MINUTES for how often interest is paid.
        # Default: 24 hours (i.e. midnight every day).
        interval: 1440

        # Description shown in the transaction history.
        # Available placeholders:
        #   <rate> → Interest rate as decimal (e.g. ‘5’).
        #   <rate-formatted> → Formatted interest rate (e.g. ‘5%’).
        #   <balance> → Account balance before interest (e.g. ‘123456.78’).
        #   <balance-formatted> → Formatted balance before interest (e.g. ‘$123,456.78’).
        #   <balance-short> → Formatted balance before interest (e.g. ‘$123k’).
        description: Interest payment (<rate-formatted>)

    # Interest on business accounts.
    # The settings are the same as for personal accounts.
    1:
        rate: 0
        interval: 1440
        description: Interest payment (<rate-formatted>)

# Invoices are money requests.
invoice:
    # The number of invoices to show per page when viewing lists of invoices.
    per-page: 10

    # Notifications for unpaid invoices (see configuration section ‘messages.invoice.notify’).
    # NEVER sent if the player has 0 unpaid invoices.
    notify:
        # If enabled, the message will be sent when a player joins.
        join: true

        # Periodically send a message while the player is online.
        # This setting controls the interval between the messages in seconds.
        # Set to ‘0’ or negative to disable this.
        interval: 300

# Advanced: do not edit unless you have good understanding of regular expressions!
# Regular expression for disallowed characters in user-provided text inputs such as account name,
# transaction description, POS description, invoice description, etc.
# Note: additionally ‘<’, ‘>’, and characters with code point above 0xFFFF are ALWAYS disallowed.
disallowed-regex: "[\x00-\x08\x0B-\x1F\x7F-\x9F\u2400-\u2421\u200B-\u200D\uFEFF\uD800-\uDB7F\uDFFF]"

# This is the end of the functionality configuration!

#
# Messages
# In this part of the configuration, you can modify *all* messages used by the plugin.
#
messages:
    # Command usage message.
    # Placeholders:
    #   <command> → The command name (e.g. ‘bank’).
    #   <arguments> → The command usage arguments (e.g. ‘send <from> <to> <amount> [description]’)
    command-usage: <yellow>(!) Usage:</yellow> <white>/<command> <arguments></white>

    # Display names for each account type.
    types:
        # Personal account.
        0: Personal
        # Business account.
        1: Business
        # Vault integration account (used to integrate payments with other plugins).
        2: Checking

    help:
        # Messages in ‘/bank help’.
        bank:
            # Shown before any commands.
            # Set to nothing, e.g. ‘header:’ (without the quotes) to disable.
            header: |
                <dark_gray>---</dark_gray>
                <green>Available commands:</green>

            # Each command is only shown if the player has permission to use it.
            # Set to nothing, e.g. ‘balance:’ (without the quotes) to disable showing a command.
            # Placeholders:
            #   <command> → The base command name (e.g. ‘bank send’).
            #   <arguments> → The command usage arguments (e.g. ‘<from> <to> <amount> [description]’).
            commands:
                balance: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- List your accounts and check balances.</white></click>
                balance-other: <click:suggest_command:/<command> --player ><green>/<command></green> <gray><arguments></gray> <white>- List another player’s accounts.</white></click>
                transfer: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Transfer money to another account.</white></click>
                history: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- List transactions.</white></click>
                create: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Open a new bank account.</white></click>
                create-other: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Open a new account for another player.</white></click>
                freeze: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Freeze/disable an account.</white></click>
                unfreeze: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Unfreeze/unblock an account.</white></click>
                delete: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Close a bank account.</white></click>
                instrument: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Create a payment instrument (bank card).</white></click>
                whois: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Get information about an account.</white></click>
                baltop: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Top balances leaderboard.</white></click>
                pos: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Create new Point Of Sale.</white></click>
                setbalance: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Set an account’s balance.</white></click>
                rename: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Set an account’s name.</white></click>
                reload: <click:suggest_command:/<command>><green>/<command></green> <white>- Reload the plugin configuration.</white></click>
                invoices: <click:suggest_command:/<command>><green>/<command></green> <white>- See invoicing commands.</white></click>

            # Shown after all commands.
            # Set to nothing, e.g. ‘footer:’ (without the quotes) to disable.
            footer: <dark_gray>---</dark_gray>

        # Messages in ‘/invoice help’.
        invoice:
            # Shown before any commands.
            # Set to nothing, e.g. ‘header:’ (without the quotes) to disable.
            header: |
                <dark_gray>---</dark_gray>
                <green>Available commands:</green>

            # Each command is only shown if the player has permission to use it.
            # Set to nothing, e.g. ‘balance:’ (without the quotes) to disable showing a command.
            # Placeholders:
            #   <command> → The base command name (e.g. ‘invoice create’).
            #   <arguments> → The command usage arguments (e.g. ‘<account> <amount> [description]’).
            commands:
                create: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Create an invoice that anyone can pay.</white></click>
                create-player: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Create and send an invoice for a specific player.</white></click>
                view: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- View an invoice.</white></click>
                pay: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Pay an invoice.</white></click>
                send: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- Send an invoice to a player.</white></click>
                list: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- List your invoices.</white></click>
                list-other: <click:suggest_command:/<command> ><green>/<command></green> <gray><arguments></gray> <white>- List another invoices of player.</white></click>

            # Shown after all commands.
            # Set to nothing, e.g. ‘footer:’ (without the quotes) to disable.
            footer: <dark_gray>---</dark_gray>

    # Account balance.
    # Available placeholders:
    #   <account> → Account name.
    #     Defaults to owner username or ID if not set.
    #   <account-id> → Account ID.
    #   <account-type> → Account type (Personal or Business).
    #   <account-owner> → Account owner username.
    #   <balance> → Account balance without formatting, example: ‘123456.78’.
    #   <balance-formatted> → Account balance with formatting, example: ‘$123,456.78’.
    #   <balance-short> → Account balance with formatting, example: ‘$123k’.
    balance: |-
        <green><account></green> <gray>(<account-type> account)</gray>
        <green>Balance:</green> <white><balance-formatted></white>
        <white><i>Owned by <account-owner></i></white>
        <i><gray><click:copy_to_clipboard:<account-id>><hover:show_text:'Click to copy account ID'><account-id></hover></click></gray></i>

    # List accounts.
    list-accounts:
        header: <green>Bank accounts</green>

        # Same placeholders as ‘balance’.
        entry: <dark_gray>*</dark_gray> <gray><click:run_command:/bank balance <account-id>><hover:show_text:'<white><account></white><newline><gray><account-type><dark_gray>:</dark_gray> <green><balance-formatted></green></gray><newline><gray><account-id></gray><newline><gray>Click to view'><account></hover></click><dark_gray>:</dark_gray> <white><balance-short></white></gray>

    reload: <green>(!) Plugin configuration reloaded</green>

    # Account created. Same placeholders as ‘balance’.
    account-created: "<green>(!) Successfully created <account-type> account: <account></green> <click:run_command:/bank balance <account-id>><gray>Click to view</gray></click>"

    # Balance set. Same placeholders as ‘balance’.
    balance-set: <green>(!) Successfully set <white><account></white> <gray>(<account-type>, <account-id>)</gray> balance to <white><balance-formatted></white></green>

    # Account name set. Same placeholders as ‘balance’.
    name-set: <green>(!) Successfully renamed account <white><account></white>

    # The account has been successfully frozen. Same placeholders as ‘balance’.
    account-frozen: <aqua>(!) Successfully frozen account <white><account></white>

    # The account has been successfully unfrozen. Same placeholders as ‘balance’.
    account-unfrozen: <green>(!) Successfully unfrozen account <white><account></white>

    # Account deleted. Same placeholders as ‘balance’.
    account-deleted: <green>(!) Successfully deleted account <white><account></white>

    # Transfer confirmation.
    # All placeholders from ‘balance’ are available.
    # Add prefix `from-` for the account sending and `to-` for the account receiving.
    # Example: ‘<to-account-id>’, ‘<from-balance-formatted>’, ….
    #
    # Additional placeholders:
    #   <amount> → Transfer amount without formatting, example: ‘123456.78’.
    #   <amount-formatted> → Transfer amount with formatting, example: ‘$123,456.78’.
    #   <amount-short> → Transfer amount with formatting, example: ‘$123k’.
    #   <description> → Transfer description.
    #   <confirm-command> → Command to run to confirm transfer.
    confirm-transfer: |-
        <green><bold>CONFIRM TRANSFER</bold></green>
        <green>From:</green> <white><from-account></white> <gray>(<from-account-type> account of <from-account-owner>, <from-account-id>)</gray>
        <green>To:</green> <white><to-account></white> <gray>(<to-account-type> account of <to-account-owner>, <to-account-id>)</gray>
        <green>Amount:</green> <white><amount-formatted></white>
        <green>Description:</green> <white><description></white>
        
        <click:run_command:<confirm-command>><hover:show_text:'<green>Click to confirm transfer</green>'><green>[I CONFIRM]</green></hover></click>

    # Transfer sent.
    # All placeholders from ‘confirm-transfer’ are available, except ‘confirm-command’.
    # Additional placeholders:
    #   <transaction-id> → Transaction ID.
    transfer-sent: <green>(!) Successfully sent <white><amount-formatted></white> from <hover:show_text:'<white><from-account></white><newline><gray><from-account-type><dark_gray>:</dark_gray> <green><from-balance-formatted></green></gray><newline><gray>Owned by <from-account-owner></gray><newline><gray><from-account-id></gray>'><white><from-account></white></hover> to <hover:show_text:'<white><to-account></white><newline><gray><to-account-type></gray><newline><gray>Owned by <to-account-owner></gray><newline><gray><to-account-id></gray>'><white><to-account></white></hover></green> <click:copy_to_clipboard:<transaction-id>><hover:show_text:'Click to copy transaction ID'><gray>#<transaction-id></gray></hover></click>

    # Transfer received. Same placeholders as ‘transfer-sent’.
    transfer-received: <green>(!) You have received <white><amount-formatted></white> from <hover:show_text:'<white><from-account></white><newline><gray><from-account-type></gray><newline><gray>Owned by <from-account-owner></gray><newline><gray><from-account-id></gray>'><white><from-account></white></hover> in your <hover:show_text:'<white><to-account></white><newline><gray><to-account-type><dark_gray>:</dark_gray> <green><to-balance-formatted></green></gray><newline><gray>Owned by <to-account-owner></gray><newline><gray><to-account-id></gray>'><white><to-account></white></hover> account:</green> <white><description></white> <click:copy_to_clipboard:<transaction-id>><hover:show_text:'Click to copy transaction ID'><gray>(#<transaction-id>)</gray></hover></click>

    # Transaction history.
    history:
        # All placeholders from ‘balance’ are available.
        # Additional placeholders:
        #   <page> → Current page number.
        #   <max-page> → Last page number.
        #   <cmd-prev> → Command to go to the previous page.
        #   <cmd-next> → Command to go to the next page.
        header: <green>Transaction history</green> <gray>(<hover:show_text:'<white><account></white><newline><gray><account-type><dark_gray>:</dark_gray> <green><balance-formatted></green></gray><newline><gray>Owned by <account-owner></gray><newline><gray><account-id></gray>'><account></hover>)</gray>

        # All placeholders from ‘balance’ and ‘transfer-sent’ are available.
        # Use ‘<account>’ (no prefix) for your account and ‘other-’ prefix for the other account.
        # Additional placeholders:
        #   <instrument> → The way the transfer was made, e.g. ‘direct transfer’, ‘pos’, etc.
        #   <date> → Transaction date.
        #     You can use ‘<date:'yyyy-MM-dd HH:mm:ss'>’.
        #     Check here for patterns:
        #       https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html#patterns
        #   <full_date> → Full date with time zone.
        #     Can be used in <hover>, <click> etc.
        entry: "<hover:show_text:'<full_date>'><gray>#<transaction-id></gray></hover> <#4ade80><amount-formatted></#4ade80> <white><hover:show_text:'<white><other-account></white><newline><gray><other-account-type></gray><newline><gray>Owned by <other-account-owner></gray><newline><gray><other-account-id></gray>'><other-account></hover>: <description></white> <gray>(<instrument>)</gray>"

        # Same placeholders as ‘header’.
        footer: <click:run_command:<cmd-prev>><hover:show_text:'<white>Previous page</white>'><green>← Previous</green></hover></click> <gray>Page <page>/<max-page></gray> <click:run_command:<cmd-next>><hover:show_text:'<white>Next page</white>'><green>Next →</green></hover></click>

        # No transactions.
        no-transactions: <gray>(!) No transactions to show.</gray>

    # Successfully created a payment instrument (bank card).
    instrument-created: <green>(!) Successfully created payment instrument.</green>

    # POS created.
    # All placeholders from ‘balance’ are available (the account is that of the seller).
    # Additional placeholders:
    #   <price> → Price of the POS contents without formatting, example: ‘123456.78’.
    #   <price-formatted> → Price of the POS contents with formatting, example: ‘$123,456.78’.
    #   <price-short> → Price of the POS contents with formatting, example: ‘$123k’.
    #   <description> → Bank statement description.
    #   <x> → X coordinate of the chest.
    #   <y> → Y coordinate of the chest.
    #   <z> → Z coordinate of the chest.
    #   <world> → World name of the chest.
    pos-created: <green>(!) Successfully created POS with price <white><price-formatted></white> to receive in account <hover:show_text:'<white><account></white><newline><gray><account-type><dark_gray>:</dark_gray> <green><balance-formatted></green></gray><newline><gray>Owned by <account-owner></gray><newline><gray><account-id></gray>'><white><account></white></hover>:</green> <gray><description></gray>

    # POS removed.
    # (no placeholders)
    pos-removed: <gold>(!) Removed POS.</gold>

    # POS purchase completed.
    # All placeholders from ‘transfer-sent’ are available.
    # The ‘from’ account is the buyer, the ‘to’ account is the seller.
    # Additional placeholders:
    #   <items> → Number of items purchased.
    #   <items-formatted> → E.g. ‘1 item’, ‘5 items’, etc.
    #   <pos> → POS coordinates, e.g. ‘X: 123 Y: -12 Z: 456 in world’.
    pos-purchase: <green>(!) Successfully purchased <white><items-formatted></white> from <hover:show_text:'<white><to-account></white><newline><gray><to-account-type></gray><newline><gray>Owned by <to-account-owner></gray><newline><gray><to-account-id></gray>'><white><to-account></white></hover> for <white><amount-formatted></white>. You paid from <hover:show_text:'<white><from-account></white><newline><gray><from-account-type><dark_gray>:</dark_gray> <green><from-balance-formatted></green></gray><newline><gray>Owned by <from-account-owner></gray><newline><gray><from-account-id></gray>'><white><from-account></white></hover>:</green> <gray><description></gray>

    # Someone made a purchase from your POS.
    # Same placeholders as ‘pos-purchase’.
    # The ‘from’ account is the buyer, the ‘to’ account is the seller.
    # Additional placeholders:
    #   <items> → Number of items purchased.
    #   <items-formatted> → E.g. ‘1 item’, ‘5 items’, etc.
    #   <pos> → POS coordinates, e.g. ‘X: 123 Y: -12 Z: 456 in world’.
    pos-purchase-seller: <green>(!) Sold <white><items-formatted></white> to <hover:show_text:'<white><from-account></white><newline><gray><from-account-type></gray><newline><gray>Owned by <from-account-owner></gray><newline><gray><from-account-id></gray>'><white><from-account></white></hover> for <white><amount-formatted></white> at POS <gray><pos></gray>. The funds are in account <hover:show_text:'<white><to-account></white><newline><gray><to-account-type><dark_gray>:</dark_gray> <green><to-balance-formatted></green></gray><newline><gray>Owned by <to-account-owner></gray><newline><gray><to-account-id></gray>'><white><to-account></white></hover>:</green> <gray><description></gray>

    # Account ‘whois’ information.
    # Same placeholders as ‘balance’.
    whois: |-
        <green>Account</green> <white><account></white>
        <gray>Owned by:</gray> <white><account-owner></white>
        <gray>Type:</gray> <white><account-type></white>
        <gray>ID: <click:copy_to_clipboard:<account-id>><hover:show_text:'<white>Copy to clipboard</white>'><white><account-id></white></hover></click></gray>

    # Highest balances leaderboard.
    baltop:
        # Baltop header.
        # Placeholders:
        #   <category> → Baltop category.
        #   <page> → Current page number.
        #   <cmd-prev> → Command to go to previous page.
        #   <cmd-next> → Command to go to next page.
        header: <green><bold>Baltop</bold></green> <gray>(<category>)</gray><newline><click:run_command:<cmd-prev>><hover:show_text:'<white>Click</white>'><green>← Previous</green></hover></click>     <gray>Page <page></gray>        <click:run_command:<cmd-next>><hover:show_text:'<white>Click</white>'><green>Next →</green></hover></click><newline><dark_gray><st>                                            </st></dark_gray>
        
        # Baltop entry.
        # All placeholders from ‘balance’ are available.
        # Additional placeholders:
        #   <position> → Leaderboard rank number.
        entry: <hover:show_text:'<white><account></white><newline><gray><account-type><dark_gray>:</dark_gray> <green><balance-formatted></green></gray><newline><gray>Owned by <account-owner></gray><newline><gray><account-id></gray>'><gray>#<position></gray> <white><balance-short></white> <green><account></green></hover>
        
        # Baltop player entry.
        # Placeholders:
        #   <position> → Leaderboard rank number.
        #   <uuid> → Player UUID.
        #   <username> → Player username.
        #   <balance> → Total balance without formatting, example: ‘123456.78’.
        #   <balance-formatted> → Total balance with formatting, example: ‘$123,456.78’.
        #   <balance-short> → Total balance with formatting, example: ‘$123k’.
        entry-player: <click:suggest_command:/msg <username> ><hover:show_text:'<white><username></white><newline><gray><balance-formatted></gray><newline>'><gray>#<position></gray> <white><balance-short></white> <green><username></green></hover></click>

    # Invoices
    invoice:
        # Viewing an invoice
        # Placeholders:
        #   <invoice-id> → Invoice ID.
        #   <amount> → Invoice amount without formatting, example: ‘123456.78’.
        #   <amount-formatted> → Invoice amount with formatting, example: ‘$123,456.78’.
        #   <amount-short> → Invoice amount with formatting, example: ‘$123k’.
        #   <description> → Invoice description.
        #   <date> → Date invoice was created.
        #     You can use ‘<date:'yyyy-MM-dd HH:mm:ss'>’.
        #     Check here for patterns:
        #       https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/format/DateTimeFormatter.html#patterns
        #   <buyer> → The username of the player who is requested to pay the invoice.
        #     Can be ‘anyone’ if anyone can pay this invoice.
        #   <transaction-id> → Invoice transaction ID (if the invoice is paid).
        #     If not paid, will show ‘unpaid’.
        #   <status> → Payment status (as defined below).
        #   <pay-button> → Button to pay the invoice (as defined below).
        #   <account> → Seller account name.
        #     Defaults to owner username or ID if not set.
        #   <account-id> → Seller account ID.
        #   <account-type> → Seller account type (Personal, Business, …).
        #   <account-owner> → Seller account owner username.
        #   <balance> → Seller account balance without formatting, example: ‘123456.78’.
        #   <balance-formatted> → Seller’s account balance with formatting, example: ‘$123,456.78’.
        #   <balance-short> → Seller’s account balance with formatting, example: ‘$123k’.
        details: |-
            <bold><green>INVOICE</green></bold> <gray><hover:show_text:'<white>Click to copy</white>'><click:copy_to_clipboard:<invoice-id>>#<invoice-id></click></hover></gray>
            <white>Amount: <green><amount-formatted></green></white>
            <white>From: <hover:show_text:'<white><account></white><newline><gray><account-type></gray><newline><gray>Owned by <account-owner></gray><newline><gray><account-id></gray>'><gray><account></gray></hover>
            <white>To: <gray><buyer></gray></white>
            <white>Date: <gray><date:'yyyy-MM-dd HH:mm'> UTC</gray></white>
            <white>Status:</white> <status>
            <white>Description: <gray><description></gray></white><pay-button>

        # Used in the <status> placeholder.
        # All placeholders from ‘details’ are available (except <status>).
        status:
            paid: "<green>Paid</green> <gray>(transaction #<transaction-id>)</gray>"
            unpaid: <gray>Unpaid</gray>

        # Used in the <pay-button> placeholder.
        # This placeholder is always replaced with nothing if the invoice is already paid.
        # All placeholders from ‘details’ are available (except <pay-button>).
        pay-button: <newline><newline><hover:show_text:'<white>Click to pay</white>'><click:suggest_command:/invoice pay <invoice-id>><bold><green>[PAY]</green></bold></click></hover>

        # You have received an invoice.
        # Same placeholders as ‘details’.
        received: <click:run_command:/invoice view <invoice-id>><green>(!)You have received invoice <hover:show_text:'<green>Invoice</green> <gray>#<invoice-id></gray><newline><gray>From <white><account></white></gray><newline><gray>For <white><amount-formatted></white></gray>'><gray>#<invoice-id></gray></hover> from <hover:show_text:'<white><account></white><newline><gray><account-type></gray><newline><gray>Owned by <account-owner></gray><newline><gray><account-id></gray>'><gray><account></gray></hover>. Click to view.</green></click>

        # Invoice successfully sent.
        # Same placeholders as ‘details’.
        sent: <green>(!) Invoice <gray>#<invoice-id></gray> successfully sent.</green>

        # Invoice created.
        # Same placeholders as ‘details’.
        created: <click:run_command:/invoice view <invoice-id>><green>(!) Successfully created invoice <gray>#<invoice-id></gray> for <gray><amount-formatted></gray> to <gray><buyer></gray> from <hover:show_text:'<white><account></white><newline><gray><account-type><dark_gray>:</dark_gray> <green><balance-formatted></green></gray><newline><gray><account-id></gray>'><gray><account></gray></hover>. Click to view.</green></click>

        # Your invoice has been paid (seller’s perspective).
        # Same placeholders as ‘details’.
        paid-seller: <click:run_command:/invoice view <invoice-id>><green>(!) Your invoice <hover:show_text:'<green>Invoice</green> <gray>#<invoice-id></gray><newline><gray>For <white><amount-formatted></white></gray>'><gray>#<invoice-id></gray></hover> <gray>(<amount-short>)</gray> has been paid. Click to view.</green></click>

        # You have successfully paid an invoice (buyer’s perspective).
        # Same placeholders as ‘details’.
        paid-buyer: <click:run_command:/invoice view <invoice-id>><green>(!) You have successfully paid invoice <hover:show_text:'<green>Invoice</green> <gray>#<invoice-id></gray><newline><gray>By <white><account></white></gray><newline><gray>For <white><amount-formatted></white></gray>'><gray>#<invoice-id></gray></hover> <gray>(<amount-short>)</gray>. Click to view.</green></click>

        # List invoices
        list:
            # Header.
            # Placeholders:
            #   <page> → Current page number.
            #   <cmd-prev> → Command to go to the previous page.
            #   <cmd-next> → Command to go to the next page.
            header: <green>Invoices</green>

            # Invoice entry.
            # Same placeholders as ‘details’.
            entry: <click:run_command:/invoice view <invoice-id>><dark_gray>#<invoice-id></dark_gray> <white><amount-formatted></white> <gray><status>,</gray> <hover:show_text:'<white><account></white><newline><gray><account-type></gray><newline><gray>Owned by <account-owner></gray><newline><gray><account-id></gray>'><gray><account></gray></hover></click>

            # Footer.
            # Same placeholders as ‘header’.
            footer: <hover:show_text:'Click to see the previous page'><click:run_command:<cmd-prev>><green>← Previous</green></click></hover> <gray>Page <page></gray> <hover:show_text:'Click to see the next page'><click:run_command:<cmd-next>><green>Next →</green></click></hover>

        # You have unpaid invoices.
        # Sent periodically and on login (as configured in ‘invoice.notify’).
        # Set to nothing, e.g. ‘notify:’ (without the quotes) to disable.
        # Placeholders:
        #   <unpaid> → The number of unpaid invoices.
        #   <unpaid-choice> → Choice placeholder for unpaid invoices.
        #     See: https://docs.advntr.dev/minimessage/dynamic-replacements.html#insert-a-choice
        notify: <click:run_command:/invoice list><hover:show_text:'Click to view unpaid invoices'><yellow>(!) You have <gray><unpaid></gray> unpaid invoice<unpaid-choice:'1#|1<s'>. <gray>Click to view.</gray></yellow></hover></click>

    # A new version of the plugin is available.
    # Placeholders:
    #   <version> → The new BankAccounts version number, e.g. ‘1.10.1’.
    #   <name> → The name of the update, either something like ‘BankAccounts 1.10.1’, or a short description/title.
    #   <url> → The URL where you can see the changelog and download the update.
    #   <current> → The version number of BankAccounts you are currently running.
    update-available: |-
        <hover:show_text:'<white>Click to view update</white><newline><gray> - Changelog & release notes<newline> - Download links'><click:open_url:<url>><dark_gray>[<green>BankAccounts</green>]</dark_gray> <white>A new update has been released: <green><b><formatted></b></green>.</white>
        <gray>Current: <white><current></white> <dark_gray>·</dark_gray> Latest: <green><version></green></gray>
    
        <white>Please update to get the latest bug fixes and features.</white>
        <green>> Click to view update<green></click></hover>

    # Error messages.
    errors:
        no-accounts: <red>(!) You have no bank accounts.</red>
        no-permission: <red>(!) You do not have permission to use this command.</red>
        account-not-found: <red>(!) Account not found.</red>
        unknown-command: <red>(!) Unknown command. Try <click:suggest_command:/<label> help><gray>/<label> help</gray></click>.</red>

        # Placeholders:
        #   <type> → The account type.
        #   <limit> → The account limit for that type.
        max-accounts: <red>(!) You cannot open more than <limit> <type> accounts.</red>

        rename-vault-account: <red>(!) You cannot rename this account.</red>
        not-account-owner: <red>(!) You are not the owner of this account.</red>
        frozen: <gold>(!) <account-type> account <gray><account> (<account-id>)</gray> is frozen. This account cannot initiate or receive transactions.</gold>
        same-from-to: <red>(!) The ‘from’ and ‘to’ accounts must be different.</red>
        transfer-self-only: <red>(!) You can only make transfers between your own accounts.</red>
        transfer-other-only: <red>(!) You cannot make a transfer between your own accounts.</red>

        # Invalid number was given. Placeholder <number> is the invalid number.
        invalid-number: <red>(!) Invalid number:</red> <gray><number></gray>

        # $0 or negative transfer
        negative-transfer: <red>(!) The amount to transfer must be greater than zero.</red>

        # Insufficient funds. All placeholders from ‘messages.balance’ are available.
        insufficient-funds: <red>(!) Your account has insufficient funds. You have <gray><balance-formatted></gray></red>

        closing-balance: <red>(!) You cannot close an account that has a non-zero balance. This account has <gray><balance-formatted></gray></red>
        player-only: <red>(!) You must be a player to use this command.</red>
        player-not-found: <red>(!) Player not found.</red>

        # You must have a specific item to convert to an instrument.
        # Placeholders:
        #   <material> → The item type that is required (the item ID).
        #   <material-key> → Item translation key, can be as ‘<lang:<material-key>>’.
        instrument-requires-item: <red>(!) You must have <gray>x1 <lang:<material-key>></gray> in your inventory to create a bank card from.</red>

        # Target player’s inventory is full.
        # Placeholder <player> is the target player’s name.
        target-inventory-full: <red>(!) The inventory of <gray><player></gray> is full.</red>

        block-too-far: <red>(!) The targeted block is too far away.</red>
        pos-already-exists: <red>(!) A POS already exists at this location.</red>
        pos-not-chest: <red>(!) The targeted block is not a chest.</red>
        pos-double-chest: <red>(!) The POS cannot be a double chest.</red>
        pos-empty: <red>(!) The chest is empty. POS cancelled.</red>
        pos-invalid-card: <red>(!) You need a valid bank card to use POS.</red>
        pos-no-permission: <red>(!) You do not have permission to use POS.</red>
        no-card: <red>(!) You must hold your bank card to use this.</red>
        pos-items-changed: <red>(!) The items in the chest have changed. POS cancelled.</red>
        pos-create-business-only: <red>(!) You can only create a POS with a business account.</red>

        # Provided string includes disallowed characters
        # Placeholder <characters> is the disallowed characters.
        disallowed-characters: <red>(!) The provided string contains disallowed characters:</red> <gray><characters></gray>

        already-frozen: <yellow>(!) This account is already frozen.</yellow>
        not-frozen: <gold>(!) This account is not frozen.</gold>
        negative-invoice: <red>(!) The amount to invoice must be greater than zero.</red>
        invoice-not-found: <red>(!) Invoice not found.</red>
        invoice-pay-self: <red>(!) You cannot pay your own invoice with the same account. You can use a different account.</red>
        invoice-already-paid: <red>(!) This invoice has already been paid.</red>

        # Cannot send this invoice to this player because either:
        # a) the invoice has a set buyer and that’s not this player; OR
        # b) the player does not have permission to view invoices not meant for them.
        invoice-cannot-send: <red>(!) You cannot send this invoice to that player because they don’t have permission to view it.</red>

        player-never-joined: <red>(!) This player has never joined this server.</red>
        async-failed: <red>(!) The request failed. See the console for details.</red>
        delete-vault-account: <red>(!) You cannot delete this account.</red>
        transfer-to-server-vault: <red>(!) You cannot transfer funds to this account. This account is for internal use only.</red>
